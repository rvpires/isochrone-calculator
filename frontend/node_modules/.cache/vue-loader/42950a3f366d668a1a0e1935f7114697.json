{"remainingRequest":"/home/rvp/isochrone-calculator/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/rvp/isochrone-calculator/frontend/src/components/IsochroneCalculator.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/rvp/isochrone-calculator/frontend/src/components/IsochroneCalculator.vue","mtime":1614695021883},{"path":"/home/rvp/isochrone-calculator/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rvp/isochrone-calculator/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/rvp/isochrone-calculator/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rvp/isochrone-calculator/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKaW1wb3J0IEdNYXAgZnJvbSAiLi9HTWFwIjsKaW1wb3J0IElucHV0Rm9ybSBmcm9tICcuL0lucHV0Rm9ybScKaW1wb3J0IHsgdjQgYXMgdXVpZHY0IH0gZnJvbSAndXVpZCcKCmV4cG9ydCBkZWZhdWx0IHsKCW5hbWU6ICJJc29jaHJvbmVDYWxjdWxhdG9yIiwKCgljb21wb25lbnRzOiB7CgkJR01hcCwKCQlJbnB1dEZvcm0sCgl9LAoKCWRhdGEgOiBmdW5jdGlvbigpewoJCXJldHVybnsKCQkJbG9hZGluZyA6ZmFsc2UsCgkJCWlzb2Nocm9uZXM6IFtdLAoJCX0KCX0sCgkKCW1ldGhvZHM6IHsKCQlkcmF3OiBmdW5jdGlvbiAoZGF0YSkgewoKCQkJdGhpcy5sb2FkaW5nID0gdHJ1ZQoKCQkJYXhpb3MucG9zdCgnaHR0cDovL2xvY2FsaG9zdDo1MDAwL2NvbXB1dGUnICwgZGF0YSkKCQkJLnRoZW4ocmVzcG9uc2UgPT57CgkJCQlpZihyZXNwb25zZS5kYXRhLnN0YXR1cyA9PT0gJ3N1Y2Nlc3MnKXsKCQkJCQlsZXQgaXNvY2hyb25lID0gcmVzcG9uc2UuZGF0YS5yZXN1bHQKCQkJCQl0aGlzLmlzb2Nocm9uZXMgPSB0aGlzLmlzb2Nocm9uZXMuY29uY2F0KHtpZCA6IHV1aWR2NCgpICwgb3JpZ2luIDogZGF0YS5vcmlnaW4sIGlzb2Nocm9uZX0pCgkJCQl9CQkJCQoJCQl9KQoJCQkuY2F0Y2goZXJyb3IgPT57CgkJCQljb25zb2xlLmxvZyhlcnJvcikKCQkJfSkKCQkJLmZpbmFsbHkoKCkgPT57CgkJCQl0aGlzLmxvYWRpbmcgPSBmYWxzZQoJCQl9KQoKCQl9LAoKCQlyZW1vdmVJc29jaHJvbmU6IGZ1bmN0aW9uKGlkKXsKCQkJdGhpcy5pc29jaHJvbmVzID0gdGhpcy5pc29jaHJvbmVzLmZpbHRlcihlbGVtZW50ID0+IGVsZW1lbnQuaWQgIT09IGlkKQoJCX0gCgl9Cn0K"},{"version":3,"sources":["IsochroneCalculator.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA","file":"IsochroneCalculator.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\t<v-container fluid>\n\t\t<v-row>\n\t\t\t<v-col cols=\"4\" align=\"\">\t\t\t\t\n\t\t\t\t<InputForm @submit=\"data => draw(data)\" :loading=\"loading\"/>\n\t\t\t</v-col>\n\n\t\t\t<v-col cols=\"8\">\n\t\t\t\t<v-row v-if=\"isochrones.length > 0\">\n\t\t\t\t\t<v-col v-for=\"(isochrone,i) in isochrones\" :key=\"isochrone.id\" align=\"center\">\n\t\t\t\t\t\tIsochrone {{i + 1}}\t\t\t\t\t\t\n\t\t\t\t\t\t<v-btn icon @click=\"removeIsochrone(isochrone.id)\">\n\t\t\t\t\t\t\t<v-icon>mdi-close</v-icon>\n\t\t\t\t\t\t</v-btn>\n\t\t\t\t\t\t<GMap :isochrone=\"isochrone\" />\n\t\t\t\t\t</v-col>\t\t\t\t\t\n\t\t\t\t</v-row>\n\t\t\t\t<v-row v-else>\n\t\t\t\t\t<v-col>\n\t\t\t\t\t\t<div style=\"width:100%; height: calc(100vh - 100px); background:#e5e5e5\">\n\t\t\t\t\t\t\t<v-row no-gutters align=\"center\" justify=\"center\">\n\t\t\t\t\t\t\t\t<v-col align=\"center\">\n\t\t\t\t\t\t\t\tInput information to start\n\n\t\t\t\t\t\t\t\t</v-col>\n\t\t\t\t\t\t\t</v-row>\n\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</v-col>\n\t\t\t\t</v-row>\n\t\t\t</v-col>\n\t\t</v-row>\n\t</v-container>\n</template>\n\n<script>\nimport axios from 'axios'\nimport GMap from \"./GMap\";\nimport InputForm from './InputForm'\nimport { v4 as uuidv4 } from 'uuid'\n\nexport default {\n\tname: \"IsochroneCalculator\",\n\n\tcomponents: {\n\t\tGMap,\n\t\tInputForm,\n\t},\n\n\tdata : function(){\n\t\treturn{\n\t\t\tloading :false,\n\t\t\tisochrones: [],\n\t\t}\n\t},\n\t\n\tmethods: {\n\t\tdraw: function (data) {\n\n\t\t\tthis.loading = true\n\n\t\t\taxios.post('http://localhost:5000/compute' , data)\n\t\t\t.then(response =>{\n\t\t\t\tif(response.data.status === 'success'){\n\t\t\t\t\tlet isochrone = response.data.result\n\t\t\t\t\tthis.isochrones = this.isochrones.concat({id : uuidv4() , origin : data.origin, isochrone})\n\t\t\t\t}\t\t\t\t\n\t\t\t})\n\t\t\t.catch(error =>{\n\t\t\t\tconsole.log(error)\n\t\t\t})\n\t\t\t.finally(() =>{\n\t\t\t\tthis.loading = false\n\t\t\t})\n\n\t\t},\n\n\t\tremoveIsochrone: function(id){\n\t\t\tthis.isochrones = this.isochrones.filter(element => element.id !== id)\n\t\t} \n\t}\n}\n</script>\n"]}]}