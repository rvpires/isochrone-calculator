{"remainingRequest":"/home/rvp/isochrone-calculator/frontend/node_modules/babel-loader/lib/index.js!/home/rvp/isochrone-calculator/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/rvp/isochrone-calculator/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/rvp/isochrone-calculator/frontend/src/components/IsochroneCalculator.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/rvp/isochrone-calculator/frontend/src/components/IsochroneCalculator.vue","mtime":1614645913868},{"path":"/home/rvp/isochrone-calculator/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rvp/isochrone-calculator/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/rvp/isochrone-calculator/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rvp/isochrone-calculator/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3J2cC9pc29jaHJvbmUtY2FsY3VsYXRvci9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBHTWFwIGZyb20gIi4vR01hcCI7CmltcG9ydCBJbnB1dEZvcm0gZnJvbSAnLi9JbnB1dEZvcm0nOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIklzb2Nocm9uZUNhbGN1bGF0b3IiLAogIGNvbXBvbmVudHM6IHsKICAgIEdNYXA6IEdNYXAsCiAgICBJbnB1dEZvcm06IElucHV0Rm9ybQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGxvYWRpbmc6IGZhbHNlCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgZHJhdzogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2RyYXcgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoZGF0YSkgewogICAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7CiAgICAgICAgICAgICAgICBheGlvcy5wb3N0KCdodHRwOi8vbG9jYWxob3N0OjUwMDAvY29tcHV0ZScsIGRhdGEpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhLnN0YXR1cyA9PT0gJ3N1Y2Nlc3MnKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIGlzb2Nocm9uZSA9IHJlc3BvbnNlLmRhdGEucmVzdWx0OwoKICAgICAgICAgICAgICAgICAgICBfdGhpcy4kcmVmcy5nbWFwLmRyYXcoZGF0YS5vcmlnaW4sIGlzb2Nocm9uZSk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgICAgICAgICAgICB9KS5maW5hbGx5KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgX3RoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIHRoaXMpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBkcmF3KF94KSB7CiAgICAgICAgcmV0dXJuIF9kcmF3LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBkcmF3OwogICAgfSgpCiAgfQp9Ow=="},{"version":3,"sources":["IsochroneCalculator.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAeA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,IAAA,MAAA,QAAA;AACA,OAAA,SAAA,MAAA,aAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,qBADA;AAGA,EAAA,UAAA,EAAA;AACA,IAAA,IAAA,EAAA,IADA;AAEA,IAAA,SAAA,EAAA;AAFA,GAHA;AAQA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,OAAA,EAAA;AADA,KAAA;AAGA,GAZA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,IAAA;AAAA,0EAAA,iBAAA,IAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEA,qBAAA,OAAA,GAAA,IAAA;AAEA,gBAAA,KAAA,CAAA,IAAA,CAAA,+BAAA,EAAA,IAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,sBAAA,QAAA,CAAA,IAAA,CAAA,MAAA,KAAA,SAAA,EAAA;AACA,wBAAA,SAAA,GAAA,QAAA,CAAA,IAAA,CAAA,MAAA;;AACA,oBAAA,KAAA,CAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,MAAA,EAAA,SAAA;AACA;AACA,iBANA,EAOA,KAPA,CAOA,UAAA,KAAA,EAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,iBATA,EAUA,OAVA,CAUA,YAAA;AACA,kBAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,iBAZA;;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADA;AAdA,CAAA","sourcesContent":["<template>\n\t<v-container fluid>\n\t\t<v-row>\n\t\t\t<v-col cols=\"4\">\t\t\t\t\n\t\t\t\t<InputForm @submit=\"data => draw(data)\" :loading=\"loading\"/>\n\t\t\t</v-col>\n\n\t\t\t<v-col cols=\"8\">\n\t\t\t\t<GMap v-if=\"false\" :polygonCoordinates=\"polygonCoordinates\" :originCoordinates=\"originCoordinates\" ref=\"gmap\" />\n\t\t\t</v-col>\n\t\t</v-row>\n\t</v-container>\n</template>\n\n<script>\nimport axios from 'axios'\nimport GMap from \"./GMap\";\nimport InputForm from './InputForm'\nexport default {\n\tname: \"IsochroneCalculator\",\n\n\tcomponents: {\n\t\tGMap,\n\t\tInputForm,\n\t},\n\n\tdata : function(){\n\t\treturn{\n\t\t\tloading :false\n\t\t}\n\t},\n\t\n\tmethods: {\n\t\tdraw: async function (data) {\n\n\t\t\tthis.loading = true\n\n\t\t\taxios.post('http://localhost:5000/compute' , data)\n\t\t\t.then(response =>{\n\t\t\t\tif(response.data.status === 'success'){\n\t\t\t\t\tlet isochrone = response.data.result\n\t\t\t\t\tthis.$refs.gmap.draw(data.origin, isochrone)\n\t\t\t\t}\t\t\t\t\n\t\t\t})\n\t\t\t.catch(error =>{\n\t\t\t\tconsole.log(error)\n\t\t\t})\n\t\t\t.finally(() =>{\n\t\t\t\tthis.loading = false\n\t\t\t})\n\n\t\t}\n\t}\n}\n</script>\n"],"sourceRoot":"src/components"}]}