{"remainingRequest":"/home/rvp/isochrone-calculator/frontend/node_modules/babel-loader/lib/index.js!/home/rvp/isochrone-calculator/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/rvp/isochrone-calculator/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/rvp/isochrone-calculator/frontend/src/components/IsochroneCalculator.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/rvp/isochrone-calculator/frontend/src/components/IsochroneCalculator.vue","mtime":1614722084066},{"path":"/home/rvp/isochrone-calculator/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rvp/isochrone-calculator/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/rvp/isochrone-calculator/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rvp/isochrone-calculator/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBHTWFwIGZyb20gIi4vR01hcCI7CmltcG9ydCBJbnB1dEZvcm0gZnJvbSAnLi9JbnB1dEZvcm0nOwppbXBvcnQgeyB2NCBhcyB1dWlkdjQgfSBmcm9tICd1dWlkJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJJc29jaHJvbmVDYWxjdWxhdG9yIiwKICBjb21wb25lbnRzOiB7CiAgICBHTWFwOiBHTWFwLAogICAgSW5wdXRGb3JtOiBJbnB1dEZvcm0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsb2FkaW5nOiBmYWxzZSwKICAgICAgaXNvY2hyb25lczogW10KICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgbWF4SXNvY2hyb25lczogZnVuY3Rpb24gbWF4SXNvY2hyb25lcygpIHsKICAgICAgaWYgKHRoaXMuaXNvY2hyb25lcy5sZW5ndGggPiAyKSB7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0KCiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGRyYXc6IGZ1bmN0aW9uIGRyYXcoZGF0YSkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgaWYgKHRoaXMubWF4SXNvY2hyb25lcykgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsKICAgICAgYXhpb3MucG9zdCgnaHR0cDovL2xvY2FsaG9zdDo1MDAwL2NvbXB1dGUnLCBkYXRhKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGlmIChyZXNwb25zZS5kYXRhLnN0YXR1cyA9PT0gJ3N1Y2Nlc3MnKSB7CiAgICAgICAgICB2YXIgaXNvY2hyb25lID0gcmVzcG9uc2UuZGF0YS5yZXN1bHQ7CiAgICAgICAgICB2YXIgb3JpZ2luID0gcmVzcG9uc2UuZGF0YS5vcmlnaW47CiAgICAgICAgICBfdGhpcy5pc29jaHJvbmVzID0gX3RoaXMuaXNvY2hyb25lcy5jb25jYXQoewogICAgICAgICAgICBpZDogdXVpZHY0KCksCiAgICAgICAgICAgIG9yaWdpbjogb3JpZ2luLAogICAgICAgICAgICBpc29jaHJvbmU6IGlzb2Nocm9uZQogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgIH0pLmZpbmFsbHkoZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgfSk7CiAgICB9LAogICAgcmVtb3ZlSXNvY2hyb25lOiBmdW5jdGlvbiByZW1vdmVJc29jaHJvbmUoaWQpIHsKICAgICAgdGhpcy5pc29jaHJvbmVzID0gdGhpcy5pc29jaHJvbmVzLmZpbHRlcihmdW5jdGlvbiAoZWxlbWVudCkgewogICAgICAgIHJldHVybiBlbGVtZW50LmlkICE9PSBpZDsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["IsochroneCalculator.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,IAAA,MAAA,QAAA;AACA,OAAA,SAAA,MAAA,aAAA;AACA,SAAA,EAAA,IAAA,MAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,qBADA;AAGA,EAAA,UAAA,EAAA;AACA,IAAA,IAAA,EAAA,IADA;AAEA,IAAA,SAAA,EAAA;AAFA,GAHA;AAQA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,UAAA,EAAA;AAFA,KAAA;AAIA,GAbA;AAeA,EAAA,QAAA,EAAA;AACA,IAAA,aAAA,EAAA,yBAAA;AACA,UAAA,KAAA,UAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,eAAA,IAAA;AACA;;AAEA,aAAA,KAAA;AACA;AAPA,GAfA;AAyBA,EAAA,OAAA,EAAA;AACA,IAAA,IAAA,EAAA,cAAA,IAAA,EAAA;AAAA;;AAGA,UAAA,KAAA,aAAA,EAAA;AACA;AACA;;AAEA,WAAA,OAAA,GAAA,IAAA;AAGA,MAAA,KAAA,CAAA,IAAA,CAAA,+BAAA,EAAA,IAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,YAAA,QAAA,CAAA,IAAA,CAAA,MAAA,KAAA,SAAA,EAAA;AACA,cAAA,SAAA,GAAA,QAAA,CAAA,IAAA,CAAA,MAAA;AACA,cAAA,MAAA,GAAA,QAAA,CAAA,IAAA,CAAA,MAAA;AACA,UAAA,KAAA,CAAA,UAAA,GAAA,KAAA,CAAA,UAAA,CAAA,MAAA,CAAA;AAAA,YAAA,EAAA,EAAA,MAAA,EAAA;AAAA,YAAA,MAAA,EAAA,MAAA;AAAA,YAAA,SAAA,EAAA;AAAA,WAAA,CAAA;AACA;AACA,OAPA,EAQA,KARA,CAQA,UAAA,KAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,OAVA,EAWA,OAXA,CAWA,YAAA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,OAbA;AAeA,KA1BA;AA4BA,IAAA,eAAA,EAAA,yBAAA,EAAA,EAAA;AACA,WAAA,UAAA,GAAA,KAAA,UAAA,CAAA,MAAA,CAAA,UAAA,OAAA;AAAA,eAAA,OAAA,CAAA,EAAA,KAAA,EAAA;AAAA,OAAA,CAAA;AACA;AA9BA;AAzBA,CAAA","sourcesContent":["<template>\n\t<v-container fluid>\n\t\t<v-row>\n\t\t\t<v-col cols=\"4\" align=\"\">\t\t\t\t\n\t\t\t\t<InputForm @submit=\"data => draw(data)\" :loading=\"loading\" :maxIsochrones=\"maxIsochrones\"/>\n\t\t\t</v-col>\n\n\t\t\t<v-col cols=\"8\">\n\t\t\t\t<v-row v-if=\"isochrones.length > 0\">\n\t\t\t\t\t<v-col v-for=\"(isochrone,i) in isochrones\" :key=\"isochrone.id\" align=\"center\">\n\t\t\t\t\t\tIsochrone {{i + 1}}\t\t\t\t\t\t\n\t\t\t\t\t\t<v-btn icon @click=\"removeIsochrone(isochrone.id)\">\n\t\t\t\t\t\t\t<v-icon>mdi-close</v-icon>\n\t\t\t\t\t\t</v-btn>\n\t\t\t\t\t\t<GMap :isochrone=\"isochrone\" />\n\t\t\t\t\t</v-col>\t\t\t\t\t\n\t\t\t\t</v-row>\n\t\t\t\t<v-row v-else>\n\t\t\t\t\t<v-col>\n\t\t\t\t\t\t<v-row style=\"width:100%; height: calc(100vh - 100px); background:#e5e5e5\" no-gutters align=\"center\" justify=\"center\">\n\t\t\t\t\t\t\t<v-col align=\"center\">\n\t\t\t\t\t\t\t<div v-if=\"loading\">\n\t\t\t\t\t\t\t\t<v-progress-circular\n\t\t\t\t\t\t\t\t\tindeterminate\n\t\t\t\t\t\t\t\t\tcolor=\"black\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<span v-else class=\"initMessage\">Provide information to compute isochrone..</span>\n\n\n\t\t\t\t\t\t\t</v-col>\n\t\t\t\t\t\t</v-row>\t\t\t\t\t\t\n\t\t\t\t\t</v-col>\n\t\t\t\t</v-row>\n\t\t\t</v-col>\n\t\t</v-row>\n\t</v-container>\n</template>\n\n<script>\nimport axios from 'axios'\nimport GMap from \"./GMap\";\nimport InputForm from './InputForm'\nimport { v4 as uuidv4 } from 'uuid'\n\nexport default {\n\tname: \"IsochroneCalculator\",\n\n\tcomponents: {\n\t\tGMap,\n\t\tInputForm,\n\t},\n\n\tdata : function(){\n\t\treturn{\n\t\t\tloading :false,\n\t\t\tisochrones: [],\n\t\t}\n\t},\n\n\tcomputed : {\n\t\tmaxIsochrones : function(){\n\t\t\tif(this.isochrones.length > 2){\n\t\t\t\treturn true\n\t\t\t}\n\n\t\t\treturn false\n\t\t}\n\t},\n\t\n\tmethods: {\n\t\tdraw: function (data) {\n\n\n\t\t\tif(this.maxIsochrones){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.loading = true\t\t\n\t\t\t\n\n\t\t\taxios.post('http://localhost:5000/compute' , data)\n\t\t\t.then(response =>{\n\t\t\t\tif(response.data.status === 'success'){\n\t\t\t\t\tlet isochrone = response.data.result\n\t\t\t\t\tlet origin = response.data.origin\n\t\t\t\t\tthis.isochrones = this.isochrones.concat({id : uuidv4() , origin, isochrone})\n\t\t\t\t}\t\t\t\t\n\t\t\t})\n\t\t\t.catch(error =>{\n\t\t\t\tconsole.log(error)\n\t\t\t})\n\t\t\t.finally(() =>{\n\t\t\t\tthis.loading = false\n\t\t\t})\n\n\t\t},\n\n\t\tremoveIsochrone: function(id){\n\t\t\tthis.isochrones = this.isochrones.filter(element => element.id !== id)\n\t\t} \n\t}\n}\n</script>\n\n<style scoped>\n.initMessage{\n\tcolor:grey;\n\tfont-size: 15px;\n\n}\n</style>\n"],"sourceRoot":"src/components"}]}