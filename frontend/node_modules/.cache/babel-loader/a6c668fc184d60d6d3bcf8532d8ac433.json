{"remainingRequest":"/home/rvp/isochrone-calculator/node_modules/babel-loader/lib/index.js!/home/rvp/isochrone-calculator/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/rvp/isochrone-calculator/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/rvp/isochrone-calculator/src/components/IsochroneCalculator.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/rvp/isochrone-calculator/src/components/IsochroneCalculator.vue","mtime":1614294791501},{"path":"/home/rvp/isochrone-calculator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rvp/isochrone-calculator/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/rvp/isochrone-calculator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rvp/isochrone-calculator/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy9pbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnCmltcG9ydCBHTWFwIGZyb20gIi4vR01hcCI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiSXNvY2hyb25lQ2FsY3VsYXRvciIsCiAgY29tcG9uZW50czogewogICAgR01hcDogR01hcAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBvbHlnb25Db29yZGluYXRlczogW10sCiAgICAgIG9yaWdpbkNvb3JkaW5hdGVzOiB7CiAgICAgICAgbGF0OiA0MS4xODQ2NzksCiAgICAgICAgbG5nOiAtOC42ODE1NTQKICAgICAgfSwKICAgICAgbl9wb2ludHM6IDEyLAogICAgICBkdXJhdGlvbjogNQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGRyYXc6IGZ1bmN0aW9uIGRyYXcoKSB7CiAgICAgIHRoaXMuJHJlZnMuZ21hcC5kcmF3KCk7CiAgICB9LAogICAgY29tcHV0ZUlzb2Nocm9uZTogZnVuY3Rpb24gY29tcHV0ZUlzb2Nocm9uZSgpIHt9LAogICAgcmFkaWFuczogZnVuY3Rpb24gcmFkaWFucyhkZWdyZWVzKSB7CiAgICAgIHZhciBwaSA9IE1hdGguUEk7CiAgICAgIHJldHVybiBkZWdyZWVzICogKHBpIC8gMTgwKTsKICAgIH0sCiAgICBkZWdyZWVzOiBmdW5jdGlvbiBkZWdyZWVzKHJhZGlhbnMpIHsKICAgICAgdmFyIHBpID0gTWF0aC5QSTsKICAgICAgcmV0dXJuIHJhZGlhbnMgKiAxODAgLyBwaTsKICAgIH0sCiAgICBpbml0aWFsUGxvdHRpbmc6IGZ1bmN0aW9uIGluaXRpYWxQbG90dGluZyhvcmlnaW5HZW9jb2RlLCBhbmdsZSwgcmFkaXVzKSB7CiAgICAgIC8qSGFydnNpbmVzIGFyZSB1c2VkIHRvIGNvbnNpZGVyIGVhcnRoIGN1cnZhdHVyZQogICAgICBvcmlnaW5fZ2VvY29kZSBpcyB0aGUgR1BTIGNvb3JkaW5hdGVzIG9mIG9yaWdpbgogICAgICBhbmdsZSBpcyB0aGUgYW5nbGUgZnJvbSBpdCdzIGdvaW5nIHRvIGJlIGNhbGN1bGF0ZWQKICAgICAgcmFkaXVzIGlzIGhvdyBsb25nIHRoZSBhcmNoIGlzIGdvaW5nIHRvIGJlKi8KICAgICAgdmFyIHIgPSA2MzcxLjA7IC8vUmFkaXVzIG9mIHRoZSBFYXJ0aCBpbiAga20KCiAgICAgIHZhciBiZWFyaW5nID0gdGhpcy5yYWRpYW5zKGFuZ2xlKTsgLy9CZWFyaW5nIGluIHJhZGlhbnMgY29udmVydGVkIGZyb20gYW5nbGUgaW4gZGVncmVlcwoKICAgICAgdmFyIGxhdDEgPSB0aGlzLnJhZGlhbnMob3JpZ2luR2VvY29kZS5sYXQpOwogICAgICB2YXIgbG5nMSA9IHRoaXMucmFkaWFucyhvcmlnaW5HZW9jb2RlLmxuZyk7CiAgICAgIHZhciBsYXQyID0gTWF0aC5hc2luKE1hdGguc2luKGxhdDEpICogTWF0aC5jb3MocmFkaXVzIC8gcikgKyBNYXRoLmNvcyhsYXQxKSAqIE1hdGguc2luKHJhZGl1cyAvIHIpICogTWF0aC5jb3MoYmVhcmluZykpOwogICAgICB2YXIgbG5nMiA9IGxuZzEgKyBNYXRoLmF0YW4yKE1hdGguc2luKGJlYXJpbmcpICogTWF0aC5zaW4ocmFkaXVzIC8gcikgKiBNYXRoLmNvcyhsYXQxKSwgTWF0aC5jb3MocmFkaXVzIC8gcikgLSBNYXRoLnNpbihsYXQxKSAqIE1hdGguc2luKGxhdDIpKTsKICAgICAgbGF0MiA9IHRoaXMuZGVncmVlcyhsYXQyKTsKICAgICAgbG5nMiA9IHRoaXMuZGVncmVlcyhsbmcyKTsKICAgICAgcmV0dXJuIHsKICAgICAgICBsYXQ6IGxhdDIsCiAgICAgICAgbG5nOiBsbmcyCiAgICAgIH07CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLm5fcG9pbnRzOyBpKyspIHsKICAgICAgdmFyIGluaXRpYWxSYWRpdXMgPSB0aGlzLmR1cmF0aW9uIC8gNjsKICAgICAgdmFyIGFuZ2xlID0gaSAqIDM2MCAvIHRoaXMubl9wb2ludHM7CiAgICAgIHRoaXMucG9seWdvbkNvb3JkaW5hdGVzID0gdGhpcy5wb2x5Z29uQ29vcmRpbmF0ZXMuY29uY2F0KHRoaXMuaW5pdGlhbFBsb3R0aW5nKHRoaXMub3JpZ2luQ29vcmRpbmF0ZXMsIGFuZ2xlLCBpbml0aWFsUmFkaXVzKSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["IsochroneCalculator.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA,OAAA,IAAA,MAAA,QAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,qBADA;AAGA,EAAA,UAAA,EAAA;AACA,IAAA,IAAA,EAAA;AADA,GAHA;AAOA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,kBAAA,EAAA,EADA;AAEA,MAAA,iBAAA,EAAA;AAAA,QAAA,GAAA,EAAA,SAAA;AAAA,QAAA,GAAA,EAAA,CAAA;AAAA,OAFA;AAGA,MAAA,QAAA,EAAA,EAHA;AAIA,MAAA,QAAA,EAAA;AAJA,KAAA;AAOA,GAfA;AAiBA,EAAA,OAAA,EAAA;AACA,IAAA,IAAA,EAAA,gBAAA;AACA,WAAA,KAAA,CAAA,IAAA,CAAA,IAAA;AACA,KAHA;AAKA,IAAA,gBAAA,EAAA,4BAAA,CAEA,CAPA;AASA,IAAA,OAAA,EAAA,iBAAA,OAAA,EAAA;AACA,UAAA,EAAA,GAAA,IAAA,CAAA,EAAA;AACA,aAAA,OAAA,IAAA,EAAA,GAAA,GAAA,CAAA;AACA,KAZA;AAcA,IAAA,OAAA,EAAA,iBAAA,OAAA,EAAA;AACA,UAAA,EAAA,GAAA,IAAA,CAAA,EAAA;AACA,aAAA,OAAA,GAAA,GAAA,GAAA,EAAA;AACA,KAjBA;AAmBA,IAAA,eAAA,EAAA,yBAAA,aAAA,EAAA,KAAA,EAAA,MAAA,EAAA;AAEA;AACA;AACA;AACA;AAEA,UAAA,CAAA,GAAA,MAAA,CAPA,CAOA;;AACA,UAAA,OAAA,GAAA,KAAA,OAAA,CAAA,KAAA,CAAA,CARA,CAQA;;AACA,UAAA,IAAA,GAAA,KAAA,OAAA,CAAA,aAAA,CAAA,GAAA,CAAA;AACA,UAAA,IAAA,GAAA,KAAA,OAAA,CAAA,aaAAA;AAAA,QAAA,GAAA,EAAA,IAAA;AAAA,QAAA,GAAA,EAAA;AAAA,OAAA;AAEA;AAvCA,GAjBA;AA2DA,EAAA,OAAA,EAAA,mBAAA;AAEA,SAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,QAAA,EAAA,CAAA,EAAA,EAAA;AAEA,UAAA,aAAA,GAAA,KAAA,QAAA,GAAA,CAAA;AACA,UAAA,KAAA,GAAA,CAAA,GAAA,GAAA,GAAA,KAAA,QAAA;AAEA,WAAA,kBAAA,GAAA,KAAA,kBAAA,CAAA,MAAA,CAAA,KAAA,eAAA,CAAA,KAAA,iBAAA,EAAA,KAAA,EAAA,aAAA,CAAA,CAAA;AAEA;AACA;AArEA,CAAA","sourcesContent":["<template>\n\t<v-container fluid>\n\t\t<v-row>\n\t\t\t<v-col cols=\"4\">\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tIsochrone Center\n\t\t\t\t\t\n\t\t\t\t<v-row v-if=\"false\">\n\t\t\t\t\t<v-col>\n\t\t\t\t\t\t<v-text-field\n\t\t\t\t\t\tlabel=\"Latitude\"\n\t\t\t\t\t\thint=\"Origin latitude in decimal degrees\"\n\t\t\t\t\t\tv-model=\"lat\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</v-col>\n\t\t\t\t\t<v-col>\n\t\t\t\t\t\t<v-text-field\n\t\t\t\t\t\t\tlabel=\"Longitude\"\n\t\t\t\t\t\t\thint=\"Origin longitude in decimal degrees\"\n\t\t\t\t\t\t\tv-model=\"lat\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</v-col>\n\t\t\t\t</v-row>\n\n\t\t\t\t<v-btn @click=\"draw\">Draw</v-btn>\n\t\t\t</v-col>\n\n\t\t\t<v-col cols=\"8\">\n\t\t\t\t<GMap :polygonCoordinates=\"polygonCoordinates\" :originCoordinates=\"originCoordinates\" ref=\"gmap\" />\n\t\t\t</v-col>\n\t\t</v-row>\n\t</v-container>\n</template>\n\n<script>\n//import axios from 'axios'\nimport GMap from \"./GMap\";\nexport default {\n\tname: \"IsochroneCalculator\",\n\n\tcomponents: {\n\t\tGMap,\n\t},\n\n\tdata: function () {\n\t\treturn {\n\t\t\tpolygonCoordinates: [],\n\t\t\toriginCoordinates: { lat: 41.184679, lng: -8.681554 },\n\t\t\tn_points : 12,\n\t\t\tduration : 5\n\n\t\t};\n\t},\n\n\tmethods: {\n\t\tdraw: function () {\n\t\t\tthis.$refs.gmap.draw();\n\t\t},\n\n\t\tcomputeIsochrone : function(){\n\n\t\t},\n\n\t\tradians: function(degrees){\n\t\t\tvar pi = Math.PI;\n\t\t\treturn degrees * (pi/180);\n\t\t},\n\n\t\tdegrees: function(radians){\n\t\t\tvar pi = Math.PI;\n\t\t\treturn radians * 180/ pi;\n\t\t},\n\n\t\tinitialPlotting : function(originGeocode , angle , radius){\n\n\t\t\t/*Harvsines are used to consider earth curvature\n\t\t\torigin_geocode is the GPS coordinates of origin\n\t\t\tangle is the angle from it's going to be calculated\n\t\t\tradius is how long the arch is going to be*/\n\n\t\t\tlet r = 6371.0  //Radius of the Earth in  km\n\t\t\tlet bearing = this.radians(angle)  //Bearing in radians converted from angle in degrees\n\t\t\tlet lat1 = this.radians(originGeocode.lat)\n\t\t\tlet lng1 = this.radians(originGeocode.lng)\n\n\t\t\tlet lat2 = Math.asin(Math.sin(lat1) * Math.cos(radius / r) + Math.cos(lat1) * Math.sin(radius / r) * Math.cos(bearing))\n\t\t\tlet lng2 = lng1 + Math.atan2(Math.sin(bearing) * Math.sin(radius / r) * Math.cos(lat1), Math.cos(radius / r) - Math.sin(lat1) * Math.sin(lat2))\n\n\t\t\tlat2 = this.degrees(lat2)\n\t\t\tlng2 = this.degrees(lng2)\n\n\t\t\treturn {lat : lat2, lng : lng2}\n\n\t\t}\n\t},\n\n\tcreated : function(){\t\t\n\t\t\n\t\tfor(let i = 0 ; i < this.n_points; i++ ){\n\n\t\t\tlet initialRadius = this.duration / 6\n\t\t\tlet angle =  i * 360 / this.n_points\n\n\t\t\tthis.polygonCoordinates = this.polygonCoordinates.concat(this.initialPlotting(this.originCoordinates , angle , initialRadius))\n\t\t\t\n\t\t}\n\t}\n};\n</script>\n"],"sourceRoot":"src/components"}]}